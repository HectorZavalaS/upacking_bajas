//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace upacking_bajas.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class siixsem_upacking_config_dbEntities : DbContext
    {
        public siixsem_upacking_config_dbEntities()
            : base("name=siixsem_upacking_config_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<se_eng_chg_types_t> se_eng_chg_types_t { get; set; }
        public virtual DbSet<se_model_tbls_t> se_model_tbls_t { get; set; }
        public virtual DbSet<se_printers> se_printers { get; set; }
        public virtual DbSet<siixsem_bines_2_dt> siixsem_bines_2_dt { get; set; }
        public virtual DbSet<siixsem_bines_dt> siixsem_bines_dt { get; set; }
        public virtual DbSet<siixsem_colors_t> siixsem_colors_t { get; set; }
        public virtual DbSet<siixsem_cover_formats_t> siixsem_cover_formats_t { get; set; }
        public virtual DbSet<siixsem_criterias_t> siixsem_criterias_t { get; set; }
        public virtual DbSet<siixsem_customer_no_t> siixsem_customer_no_t { get; set; }
        public virtual DbSet<siixsem_dj_groups_t> siixsem_dj_groups_t { get; set; }
        public virtual DbSet<siixsem_family_t> siixsem_family_t { get; set; }
        public virtual DbSet<siixsem_flux_t> siixsem_flux_t { get; set; }
        public virtual DbSet<siixsem_history_t> siixsem_history_t { get; set; }
        public virtual DbSet<siixsem_internal_no_t> siixsem_internal_no_t { get; set; }
        public virtual DbSet<siixsem_kit_cfg_dt> siixsem_kit_cfg_dt { get; set; }
        public virtual DbSet<siixsem_labels_path> siixsem_labels_path { get; set; }
        public virtual DbSet<siixsem_labels_t> siixsem_labels_t { get; set; }
        public virtual DbSet<siixsem_lbl_type_t> siixsem_lbl_type_t { get; set; }
        public virtual DbSet<siixsem_lblMods_td> siixsem_lblMods_td { get; set; }
        public virtual DbSet<siixsem_lines_t> siixsem_lines_t { get; set; }
        public virtual DbSet<siixsem_mixed_bin_pr_dt> siixsem_mixed_bin_pr_dt { get; set; }
        public virtual DbSet<siixsem_model_cfg_t> siixsem_model_cfg_t { get; set; }
        public virtual DbSet<siixsem_model_cover_cfg_td> siixsem_model_cover_cfg_td { get; set; }
        public virtual DbSet<siixsem_model_pck_cfg_t> siixsem_model_pck_cfg_t { get; set; }
        public virtual DbSet<siixsem_model_printers_dt> siixsem_model_printers_dt { get; set; }
        public virtual DbSet<siixsem_models_inf_td> siixsem_models_inf_td { get; set; }
        public virtual DbSet<siixsem_models_lbl_cfg_td> siixsem_models_lbl_cfg_td { get; set; }
        public virtual DbSet<siixsem_models_t> siixsem_models_t { get; set; }
        public virtual DbSet<siixsem_models_tables_t> siixsem_models_tables_t { get; set; }
        public virtual DbSet<siixsem_models_tbl_td> siixsem_models_tbl_td { get; set; }
        public virtual DbSet<siixsem_models_validation_td> siixsem_models_validation_td { get; set; }
        public virtual DbSet<siixsem_ports_t> siixsem_ports_t { get; set; }
        public virtual DbSet<siixsem_print_modes_t> siixsem_print_modes_t { get; set; }
        public virtual DbSet<siixsem_reviews_t> siixsem_reviews_t { get; set; }
        public virtual DbSet<siixsem_rules_t> siixsem_rules_t { get; set; }
        public virtual DbSet<siixsem_sides_t> siixsem_sides_t { get; set; }
        public virtual DbSet<siixsem_tblModels_cfg> siixsem_tblModels_cfg { get; set; }
        public virtual DbSet<siixsem_traceabilty_no_t> siixsem_traceabilty_no_t { get; set; }
        public virtual DbSet<siixsem_voltages_t> siixsem_voltages_t { get; set; }
        public virtual DbSet<sixsem_servers_t> sixsem_servers_t { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<siixsem_casualty_log> siixsem_casualty_log { get; set; }
        public virtual DbSet<siixsem_history_change> siixsem_history_change { get; set; }
        public virtual DbSet<siixsem_pending_change> siixsem_pending_change { get; set; }
        public virtual DbSet<BINES> BINES { get; set; }
        public virtual DbSet<BINES2> BINES2 { get; set; }
        public virtual DbSet<COVERS> COVERS { get; set; }
        public virtual DbSet<DJGROUPS> DJGROUPS { get; set; }
        public virtual DbSet<MODELS> MODELS { get; set; }
        public virtual DbSet<PRINTERS> PRINTERS { get; set; }
        public virtual DbSet<PRINTERS_MODELS> PRINTERS_MODELS { get; set; }
    
        public virtual ObjectResult<Nullable<int>> ExistEngChg(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ExistEngChg", idModelParameter);
        }
    
        public virtual ObjectResult<ExistFutEngChg_Result> ExistFutEngChg(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExistFutEngChg_Result>("ExistFutEngChg", idModelParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> existSerial(string serial, string tblPack, Nullable<int> box_no, Nullable<int> julian_date)
        {
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var tblPackParameter = tblPack != null ?
                new ObjectParameter("tblPack", tblPack) :
                new ObjectParameter("tblPack", typeof(string));
    
            var box_noParameter = box_no.HasValue ?
                new ObjectParameter("box_no", box_no) :
                new ObjectParameter("box_no", typeof(int));
    
            var julian_dateParameter = julian_date.HasValue ?
                new ObjectParameter("julian_date", julian_date) :
                new ObjectParameter("julian_date", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("existSerial", serialParameter, tblPackParameter, box_noParameter, julian_dateParameter);
        }
    
        public virtual ObjectResult<getActiveBin_Result> getActiveBin(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getActiveBin_Result>("getActiveBin", idModelParameter);
        }
    
        public virtual ObjectResult<getActiveBin2_Result> getActiveBin2(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getActiveBin2_Result>("getActiveBin2", idModelParameter);
        }
    
        public virtual ObjectResult<getBin2Position_Result> getBin2Position(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBin2Position_Result>("getBin2Position", idModelParameter);
        }
    
        public virtual ObjectResult<string> getBin2ToPrint(Nullable<int> idModelFath)
        {
            var idModelFathParameter = idModelFath.HasValue ?
                new ObjectParameter("idModelFath", idModelFath) :
                new ObjectParameter("idModelFath", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getBin2ToPrint", idModelFathParameter);
        }
    
        public virtual ObjectResult<getBinesPosition_Result> getBinesPosition(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBinesPosition_Result>("getBinesPosition", idModelParameter);
        }
    
        public virtual ObjectResult<string> getBinToPrint(Nullable<int> idModelFath)
        {
            var idModelFathParameter = idModelFath.HasValue ?
                new ObjectParameter("idModelFath", idModelFath) :
                new ObjectParameter("idModelFath", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getBinToPrint", idModelFathParameter);
        }
    
        public virtual ObjectResult<getBinValidationByModel_Result> getBinValidationByModel(Nullable<int> iDDetModel)
        {
            var iDDetModelParameter = iDDetModel.HasValue ?
                new ObjectParameter("IDDetModel", iDDetModel) :
                new ObjectParameter("IDDetModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBinValidationByModel_Result>("getBinValidationByModel", iDDetModelParameter);
        }
    
        public virtual ObjectResult<getColorPosition_Result> getColorPosition(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getColorPosition_Result>("getColorPosition", idModelParameter);
        }
    
        public virtual ObjectResult<getColorPositionBin2_Result> getColorPositionBin2(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getColorPositionBin2_Result>("getColorPositionBin2", idModelParameter);
        }
    
        public virtual ObjectResult<string> getCoverCodId(Nullable<int> idModelDet)
        {
            var idModelDetParameter = idModelDet.HasValue ?
                new ObjectParameter("idModelDet", idModelDet) :
                new ObjectParameter("idModelDet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getCoverCodId", idModelDetParameter);
        }
    
        public virtual ObjectResult<string> getCoverCodIdent(Nullable<int> idModelDet)
        {
            var idModelDetParameter = idModelDet.HasValue ?
                new ObjectParameter("idModelDet", idModelDet) :
                new ObjectParameter("idModelDet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getCoverCodIdent", idModelDetParameter);
        }
    
        public virtual ObjectResult<getCoverConfig_Result> getCoverConfig(Nullable<int> idModelDet)
        {
            var idModelDetParameter = idModelDet.HasValue ?
                new ObjectParameter("idModelDet", idModelDet) :
                new ObjectParameter("idModelDet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCoverConfig_Result>("getCoverConfig", idModelDetParameter);
        }
    
        public virtual ObjectResult<getCoverModels_Result> getCoverModels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCoverModels_Result>("getCoverModels");
        }
    
        public virtual ObjectResult<string> getCoverSwVer(Nullable<int> idModelDet)
        {
            var idModelDetParameter = idModelDet.HasValue ?
                new ObjectParameter("idModelDet", idModelDet) :
                new ObjectParameter("idModelDet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getCoverSwVer", idModelDetParameter);
        }
    
        public virtual ObjectResult<string> getCovTable(Nullable<int> idFatherModel)
        {
            var idFatherModelParameter = idFatherModel.HasValue ?
                new ObjectParameter("idFatherModel", idFatherModel) :
                new ObjectParameter("idFatherModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getCovTable", idFatherModelParameter);
        }
    
        public virtual ObjectResult<getDJByIdModel_Result> getDJByIdModel(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDJByIdModel_Result>("getDJByIdModel", idModelParameter);
        }
    
        public virtual ObjectResult<getFluxColPosition_Result> getFluxColPosition(Nullable<int> idModel, string fLUX, string cOLOR)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            var fLUXParameter = fLUX != null ?
                new ObjectParameter("FLUX", fLUX) :
                new ObjectParameter("FLUX", typeof(string));
    
            var cOLORParameter = cOLOR != null ?
                new ObjectParameter("COLOR", cOLOR) :
                new ObjectParameter("COLOR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getFluxColPosition_Result>("getFluxColPosition", idModelParameter, fLUXParameter, cOLORParameter);
        }
    
        public virtual ObjectResult<getFluxPosition_Result> getFluxPosition(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getFluxPosition_Result>("getFluxPosition", idModelParameter);
        }
    
        public virtual ObjectResult<getFluxPositionBin2_Result> getFluxPositionBin2(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getFluxPositionBin2_Result>("getFluxPositionBin2", idModelParameter);
        }
    
        public virtual ObjectResult<string> getGBTable(Nullable<int> idFatherModel)
        {
            var idFatherModelParameter = idFatherModel.HasValue ?
                new ObjectParameter("idFatherModel", idFatherModel) :
                new ObjectParameter("idFatherModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getGBTable", idFatherModelParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getIDFather(Nullable<int> idDetModel)
        {
            var idDetModelParameter = idDetModel.HasValue ?
                new ObjectParameter("idDetModel", idDetModel) :
                new ObjectParameter("idDetModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getIDFather", idDetModelParameter);
        }
    
        public virtual ObjectResult<getKitByIdModel_Result> getKitByIdModel(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getKitByIdModel_Result>("getKitByIdModel", idModelParameter);
        }
    
        public virtual ObjectResult<getModelByCustomerNo_Result> getModelByCustomerNo(string custNo)
        {
            var custNoParameter = custNo != null ?
                new ObjectParameter("CustNo", custNo) :
                new ObjectParameter("CustNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModelByCustomerNo_Result>("getModelByCustomerNo", custNoParameter);
        }
    
        public virtual ObjectResult<getModelConfig_Result> getModelConfig(Nullable<int> idModelDet)
        {
            var idModelDetParameter = idModelDet.HasValue ?
                new ObjectParameter("idModelDet", idModelDet) :
                new ObjectParameter("idModelDet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModelConfig_Result>("getModelConfig", idModelDetParameter);
        }
    
        public virtual ObjectResult<getModelDetail_Result> getModelDetail(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModelDetail_Result>("getModelDetail", idModelParameter);
        }
    
        public virtual ObjectResult<string> getModelFatDesc(Nullable<int> idFat)
        {
            var idFatParameter = idFat.HasValue ?
                new ObjectParameter("idFat", idFat) :
                new ObjectParameter("idFat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getModelFatDesc", idFatParameter);
        }
    
        public virtual ObjectResult<getModelList_Result> getModelList(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModelList_Result>("getModelList", idModelParameter);
        }
    
        public virtual ObjectResult<getModels_Result> getModels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModels_Result>("getModels");
        }
    
        public virtual ObjectResult<string> getModelsDet(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getModelsDet", idModelParameter);
        }
    
        public virtual ObjectResult<getModelValidations_Result> getModelValidations(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModelValidations_Result>("getModelValidations", idModelParameter);
        }
    
        public virtual ObjectResult<string> getPackingTable(Nullable<int> idFatherModel)
        {
            var idFatherModelParameter = idFatherModel.HasValue ?
                new ObjectParameter("idFatherModel", idFatherModel) :
                new ObjectParameter("idFatherModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getPackingTable", idFatherModelParameter);
        }
    
        public virtual ObjectResult<getPQCReport_Result> getPQCReport(string dateIni, string dateFin, string pRODUCT_PN, string dEFECT_CODE)
        {
            var dateIniParameter = dateIni != null ?
                new ObjectParameter("dateIni", dateIni) :
                new ObjectParameter("dateIni", typeof(string));
    
            var dateFinParameter = dateFin != null ?
                new ObjectParameter("dateFin", dateFin) :
                new ObjectParameter("dateFin", typeof(string));
    
            var pRODUCT_PNParameter = pRODUCT_PN != null ?
                new ObjectParameter("PRODUCT_PN", pRODUCT_PN) :
                new ObjectParameter("PRODUCT_PN", typeof(string));
    
            var dEFECT_CODEParameter = dEFECT_CODE != null ?
                new ObjectParameter("DEFECT_CODE", dEFECT_CODE) :
                new ObjectParameter("DEFECT_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPQCReport_Result>("getPQCReport", dateIniParameter, dateFinParameter, pRODUCT_PNParameter, dEFECT_CODEParameter);
        }
    
        public virtual ObjectResult<getPrinterByID_Result> getPrinterByID(Nullable<int> idPrinter)
        {
            var idPrinterParameter = idPrinter.HasValue ?
                new ObjectParameter("idPrinter", idPrinter) :
                new ObjectParameter("idPrinter", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPrinterByID_Result>("getPrinterByID", idPrinterParameter);
        }
    
        public virtual ObjectResult<getPrinterModel_Result> getPrinterModel(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPrinterModel_Result>("getPrinterModel", idModelParameter);
        }
    
        public virtual ObjectResult<getPrinters_Result> getPrinters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPrinters_Result>("getPrinters");
        }
    
        public virtual ObjectResult<getPrintersbyModel_Result> getPrintersbyModel(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPrintersbyModel_Result>("getPrintersbyModel", idModelParameter);
        }
    
        public virtual ObjectResult<getSerialPCBbyCover_Result> getSerialPCBbyCover(Nullable<int> idModel, string serialCover)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var serialCoverParameter = serialCover != null ?
                new ObjectParameter("serialCover", serialCover) :
                new ObjectParameter("serialCover", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSerialPCBbyCover_Result>("getSerialPCBbyCover", idModelParameter, serialCoverParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getSerialsQtyToRead(Nullable<int> idDetModel)
        {
            var idDetModelParameter = idDetModel.HasValue ?
                new ObjectParameter("idDetModel", idDetModel) :
                new ObjectParameter("idDetModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getSerialsQtyToRead", idDetModelParameter);
        }
    
        public virtual ObjectResult<getSideModel_Result> getSideModel(Nullable<int> idDetMod)
        {
            var idDetModParameter = idDetMod.HasValue ?
                new ObjectParameter("idDetMod", idDetMod) :
                new ObjectParameter("idDetMod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSideModel_Result>("getSideModel", idDetModParameter);
        }
    
        public virtual ObjectResult<getVoltPosition_Result> getVoltPosition(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVoltPosition_Result>("getVoltPosition", idModelParameter);
        }
    
        public virtual ObjectResult<getVoltPositionBin2_Result> getVoltPositionBin2(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVoltPositionBin2_Result>("getVoltPositionBin2", idModelParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> haveBin2(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("haveBin2", idModelParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> isAllowMprinters(Nullable<int> idModelDet)
        {
            var idModelDetParameter = idModelDet.HasValue ?
                new ObjectParameter("idModelDet", idModelDet) :
                new ObjectParameter("idModelDet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("isAllowMprinters", idModelDetParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> isKit(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("isKit", idModelParameter);
        }
    
        public virtual ObjectResult<string> isNotPrinterSet(Nullable<int> idDetModel)
        {
            var idDetModelParameter = idDetModel.HasValue ?
                new ObjectParameter("idDetModel", idDetModel) :
                new ObjectParameter("idDetModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("isNotPrinterSet", idDetModelParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> setActiveBin(string fLUX, string cOLOR, string vOLT, Nullable<int> idModel)
        {
            var fLUXParameter = fLUX != null ?
                new ObjectParameter("FLUX", fLUX) :
                new ObjectParameter("FLUX", typeof(string));
    
            var cOLORParameter = cOLOR != null ?
                new ObjectParameter("COLOR", cOLOR) :
                new ObjectParameter("COLOR", typeof(string));
    
            var vOLTParameter = vOLT != null ?
                new ObjectParameter("VOLT", vOLT) :
                new ObjectParameter("VOLT", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("setActiveBin", fLUXParameter, cOLORParameter, vOLTParameter, idModelParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> setActiveBin2(string fLUX, string cOLOR, string vOLT, Nullable<int> idModel)
        {
            var fLUXParameter = fLUX != null ?
                new ObjectParameter("FLUX", fLUX) :
                new ObjectParameter("FLUX", typeof(string));
    
            var cOLORParameter = cOLOR != null ?
                new ObjectParameter("COLOR", cOLOR) :
                new ObjectParameter("COLOR", typeof(string));
    
            var vOLTParameter = vOLT != null ?
                new ObjectParameter("VOLT", vOLT) :
                new ObjectParameter("VOLT", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("setActiveBin2", fLUXParameter, cOLORParameter, vOLTParameter, idModelParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> setActiveBinByFlux(string strBin, Nullable<int> idModel)
        {
            var strBinParameter = strBin != null ?
                new ObjectParameter("strBin", strBin) :
                new ObjectParameter("strBin", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("setActiveBinByFlux", strBinParameter, idModelParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> updateLineModel(Nullable<int> idLine, Nullable<int> idModel)
        {
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("updateLineModel", idLineParameter, idModelParameter);
        }
    
        public virtual ObjectResult<string> updateModelPrinter(Nullable<int> idDetModel, Nullable<int> idLine)
        {
            var idDetModelParameter = idDetModel.HasValue ?
                new ObjectParameter("idDetModel", idDetModel) :
                new ObjectParameter("idDetModel", typeof(int));
    
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("updateModelPrinter", idDetModelParameter, idLineParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> validateBin(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("validateBin", idModelParameter);
        }
    }
}
